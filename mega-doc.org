#+title: Résumé formel de la recherche
#+author: Charles-Édouard Lizotte
#+date:28/11/2023
#+LATEX_CLASS: org-report
#+CITE_EXPORT: natbib
#+LANGUAGE: fr
#+BIBLIOGRAPHY: master-bibliography.bib
#+OPTIONS: toc:nil title:nil


\mytitlepage
\tableofcontents\newpage

* Description du modèle en eau peu profonde

** Équations du mouvement


#+caption: Exemple de modèle « shallow water » à 4 couches.
#+NAME: fig:4couches
\begin{wrapfigure}[18]{r}{0.45\textwidth}
\begin{center}
\vspace{-2\baselineskip}
\begin{tikzpicture}[scale=1.1]
% Fond : 
\fill[NavyBlue!5] (0, 0) rectangle (4,-1);
\fill[NavyBlue!10] (0,-1) rectangle (4,-2);
\fill[NavyBlue!15] (0,-2) rectangle (4,-3);
\fill[NavyBlue!20] (0,-3) rectangle (4,-4);
% Lignes 
\draw [ultra thick] (0,0) node [anchor=east] {$\eta_1 = 0$} -- (4,0);
\draw [dotted] (0,-1) -- (4,-1);
\draw [dotted] (0,-2) -- (4,-2);
\draw [dotted] (0,-3) -- (4,-3);
\draw [ultra thick] (0,-4) node [anchor=east] {$\eta_B = 0$} -- (4,-4);
% courbes : 
\draw [ultra thin] (0,-1.2) node [anchor=east] {$\eta_2$} sin (1.2,-0.8) cos (2,-1) sin (2.8,-1.2) cos (4,-0.8);
\draw [ultra thin] (0,-2.2) node [anchor=east] {$\eta_3$} sin (1.2,-1.8) cos (2,-2) sin (2.8,-2.2) cos (4,-1.8);
\draw [ultra thin] (0,-3.2) node [anchor=east] {$\eta_4$} sin (1.2,-2.8) cos (2,-3) sin (2.8,-3.2) cos (4,-2.8);
% Textes : 
\draw (2,0) node [anchor=south] {Surface fixe} ;
\draw (2,-4) node [anchor=north] {Plancher océanique} ;
% H-k
\node at (4.3,-0.5) (H1) {$H_1$};
\node at (4.3,-1.5) (H2) {$H_2$};
\node at (4.3,-2.5) (H3) {$H_3$};
\node at (4.3,-3.5) (H4) {$H_4$};
% d-k
\node at (2,-0.5) (d1) {$h_1$};
\node at (2,-1.5) (d2) {$h_2$};
\node at (2,-2.5) (d3) {$h_3$};
\node at (2,-3.5) (d4) {$h_4$};
% flèches 
\draw[>=stealth, ->|] (H1) -- (4.3, 0); 
\draw[>=stealth, ->|] (H1) -- (4.3,-1);
\draw[>=stealth, -> ] (H2) -- (4.3,-1); 
\draw[>=stealth, ->|] (H2) -- (4.3,-2);
\draw[>=stealth, -> ] (H3) -- (4.3,-2); 
\draw[>=stealth, ->|] (H3) -- (4.3,-3);
\draw[>=stealth, -> ] (H4) -- (4.3,-3); 
\draw[>=stealth, ->|] (H4) -- (4.3,-4);
\end{tikzpicture}
\end{center}
\end{wrapfigure}



Formellement, pour chaque couche, les équations du mouvement du modèle /shallow water/ sont données par
#+NAME: eq:mvmt
\begin{equation}
   \pdv{\uu_k}{t} + \qty(f+\zeta_k)\pt \kvf\times\uu_k = -\gradient{B_k} + \boldsymbol{D}_k + \delta(k,1)\cdot \qty(\frac{\boldsymbol{\tau_a}}{\rho_o\pt H_k})\pt,
\end{equation}
où la fonction de Bernouilli $B_k$ est exprimée par
\begin{equation}
   B_k = \rho^{-1}_1 p_s + \rho^{-1}_k p_k + \uu_k^2/2.
\end{equation}

L'indice $k$ représente l'indicateur numérique de la couche.
$\uu_k$ est la vitesse du courant horizontal, $f$ représente la fréquence de Coriolis (en $Rad/s$), $\zeta_k$ est la vorticité horizontale, $\boldsymbol{\tau}_a$ est la contrainte de cisaillement du vent à la surface, $\rho_k$ est la densité de l'eau dans la couche courante et $H_k$ est l'épaisseur fixe moyenne de cette dernière.
La quantité $p_s$ représente la pression de surface induite par la surface fixe (/rigid lid/) et le vecteur $\vb{D}_k$ décrit la dissipation dans chaque couche, nous y reviendrons bientôt.
Il est aussi courant d'utiliser la variable $\phi_k = \rho_1^{-1} p_k$.\bigskip

Dans l'expression du gradient de la fonction de Bernouilli $\gradient{B_k}$, la pression $p_k$ est décomposée selon la couche, de sorte que
\begin{align}
   && p_k = \left\lbrace\hspace{0.3cm}\begin{matrix}
     p_s & \text{si}\hspace{0.5cm} k=1 \\
     p_{k-1} + \rho_1 g'_k \eta_k & \text{autrement} \\
   \end{matrix}\hspace{0.3cm}\right\rbrace &&
   && \text{où} &&
   &&g_k' = g \pt\qty(\frac{\rho_k - \rho_{k-1}}{\rho_1}) &&
\end{align}
est la gravité réduite de la couche $k$.\bigskip

\nb Rapellons que, *dans notre propre nomenclature, la quantité* « $\eta_k$ » *représente l'élévation de la surface d'une couche* « /k/ », en opposition à la nomenclature de [cite/t/c:@vallis_2006], où $\eta_k$ représente l'élévation du bas de la couche $k$ (voir figure [[fig:4couches]]).\bigskip

De leur côté, les termes de dissipation $\boldsymbol{D}_k$ sont exprimés par
\begin{equation}
   \boldsymbol{D}_k = \underbrace{\tall-A_h\pt\gradient^{\pt4}\pt\uu^{t-1}_k}_\text{Hyperviscosité}
   \ - \ \underbrace{\tall\delta(k,nz) \cdot r\pt \uu^{t-1}_k.}_{\substack{\text{Frottement}\\\text{au fond}}}
\end{equation}
L'indicateur $t-1$ réfère au pas de temps précédent, car nous utilisons un schéma temporel de type /leapfrog/.
L'absence d'indice temporel dénote donc le pas de temps courant d'une quantité, soit $\uu^t$ par exemple. 
Une meilleure description du pas de temps est fournie dans la section [[sec:gradpress]]. \bigskip


\nb Mentionnons que l'expression $\delta(k,i)$ réfère ici au delta de Kronecker, soit une /switch/ de valeur 1 lorsque $k=i$ et 0 autrement.
Mathématiquement
\begin{equation}
   \delta(k,i) = \left\lbrace \hspace{0.2cm}\begin{matrix}
     \hspace{0.3cm}1 & \text{si}\hspace{0.5cm} k=i, \\
     \hspace{0.3cm}0 & \text{autrement}.
   \end{matrix}\right.
\end{equation}

** Conservation de la masse

En eau peu profonde, l'équation de conservation de la masse est exprimée par 
\begin{equation}
   \pdv{h_k}{t} =  \divergence(h_k\uu_k)\ +\ \underbrace{\delta(k=1)\cdot \qty(\divergence{\vb{U}^b}),}_{\substack{\text{Autre transport}\\ \text{de surface}}}
\end{equation}
où $\vb{U}^b$ pourrait représenter n'importe quel transport de surface, tel que le transport de Stokes, le transport d'Ekman, comme dans [cite/t/c:@chen_2021].
De base, aucune quantité n'est précisée ici, donc gardons $\vb{U}^b = 0$. 

** Résolution du gradient de pression
<<sec:gradpress>>

Concrétement, le /timestepping/ de type /leapfrog/ pour les équations du mouvement est exprimé par
#+NAME:eq:leapfrog
\begin{equation}
 \uu^{t+1}_k = \underbrace{ \uu^{t-1}_k + (2\Delta t)\cdot \vb*{G}^t_k}_{\tilde{\uu}_k} \ -\ \gradient{\phi_s}.
\end{equation}
où $\vb{G}^t$ est un vecteur valise qui contient tout le /RHS/ des équations [[eq:mvmt]], mais sans le terme de pression de surface ($\gradient{\phi_s}$).
Le terme $\boldsymbol{G}_k^t$ est calculé au pas de temps courant de manière à s'incruster dans le /timestepping/ de type /leapfrog/.
Ainsi, l'expression
\begin{equation}
   \tilde{\uu}^{t+1}_k = \uu^{t-1}_k + (2\Delta t)\cdot \vb*{G}^t_k,
\end{equation}
représente donc le nouveau courant sans la correction associée à la pression de surface, qui est pour l'instant inconnue.\bigskip


Conceptuellement, on peut décomposer notre courant en deux sections, soit une composante /barotrope/ et une composante /barocline/.
La composante barotrope est le courant moyenné par l'épaisseur des couches, tandis que la composante barocline représente l'anomalie par rapport à cette moyenne, de sorte à retrouver
\begin{subequations}
\begin{align}
 && \tilde{\uu}_{BT} = \frac{1}{H} \qty(\sum_k^n d_k \tilde{\uu}_k), &&
 && \tilde{\uu}_{BC,\pt k} = \tilde{\uu}_k - \tilde{\uu}_{BT}. &&
\end{align}
\end{subequations}

Puis à l'aide de ce courant barotrope, on peut construire une vorticité barotrope
\begin{equation}
 \tilde{\zeta}_{BT} = \kvf \cdot \qty[\curl{\tilde{\uu}_{BT}}].
\end{equation}

Mais on peut aussi calculer la vorticité de notre futur courant, de sorte à retrouver
\begin{align}
& \zeta^{t+1}_{BT} = \kvf \cdot \qty[\curl{\uu^{t+1}_{BT}}],\venti\nonumber\\
& \zeta^{t+1}_{BT} = \kvf \cdot \qty[\curl(\tilde{\uu}_{BT} + \gradient{\phi_s})],\venti\nonumber\\
& \zeta^{t+1}_{BT} = \kvf \cdot \qty[\curl{\tilde{\uu}_{BT}}] + \cancelto{0}{\kvf\cdot\qty[\curl{\gradient{\phi_s}}]}.
\end{align}
Comme le rotationnel d'un gradient est toujours nul, on arrive à la conclusion inévitable que
\begin{equation}
 \zeta^{t+1}_{BT} = \tilde{\zeta}_{BT}.
\end{equation}
La correspondance entre la vorticité relative est donnée par $\zeta = \laplacian{\psi}$, donc on obtient une nouvelle équation de Poisson donnée par
\begin{equation}
\boxed{\hspace{0.3cm}
 \laplacian{\psi_{BT}} = \kvf \cdot \qty[\curl{\tilde{\uu}_{BT}}]
 \hspace{0.31cm}\text{avec C.F. Dirichlet}\hspace{0.31cm}
 \eval{\psi_{BT}\pt}_{x_0,\pt x_f} = \ \eval{\psi_{BT}\pt}_{y_0,\pt y_f} = 0.
\hspace{0.3cm} }
\end{equation}
Donc en trouvant $\psi_{BT}$ à l'aide d'un solveur elliptique (Fishpack dans notre cas), on trouve aussi $\uu_{BT}$ à l'aide de la relation avec la fonction de courant,
\begin{align}
&&u = -\pdv{\psi}{y} &&\text{et} && v = \pdv{\psi}{x}.&&
\end{align}
Puis finalement, on retrouve les courants mis-à-jour à l'aide de la relation
\begin{align}
 \uu^{t+1}_k =&\pt \uu_{BT} + \uu_{BC,\pt k} \\
            =&\pt \curl{\qty(\kvf\psi_{BT})} + \uu_{BC,\pt k},
\end{align}
où $\uu_{BC} = \tilde{\uu}_{BC}$ comme $\gradient{\phi_s}$ est une composante barotrope.\newpage

** Conditions frontières

#+CAPTION: Représentation de la grille numérique utilisée pour le modèle en eau peu profonde (type [[https://en.wikipedia.org/wiki/Arakawa_grids][Arakawa-C]] )
#+NAME: fig:grille
\begin{wrapfigure}[18]{r}{0.4\textwidth}
\vspace{-\baselineskip}
\centering
\begin{tikzpicture}[scale=2.4]
% Grille : 
\draw[step=1.0,black,dotted] (0.85,0.85) grid (3.25,3.25);
\draw[MidnightBlue!15, line width = 3.5pt] (3.25,1) -- (1,1) -- (1,3.25);
\draw[MidnightBlue] (1,3.4) node {Mur};
% Flèches en v : 
\foreach \x in {1,2}
\foreach \y in {1,2,3}
{
    \draw [-{latex},red]
              (\x + 0.5, \y - 0.1 ) --
              (\x + 0.5, \y + 0.1);
    \draw [] (\x + 0.5, \y + 0.0) node [red,right] {$v\pt [\x,\y]$};
}
% Flèches en u :
\foreach \x in {1,2,3}
\foreach \y in {1,2}
{
    \draw [-{latex},blue](\x - 0.1 , \y + 0.5 ) --
              node [below,blue] {$u\pt[\x,\y]$}
              (\x + 0.1, \y + 0.5);
}
% Points aux coins :
\foreach \x in {1,2,3}
\foreach \y in {1,2,3}
{
\fill [black] (\x, \y) circle (0.5pt);
}
% Milieux :
\foreach \x in {1,2}
\foreach \y in {1,2}
{\draw (\x+0.5,\y+0.5) node [] {$\qty[\pt\x,\y\pt]$} ;}
% Flèches
\node [] at (1.5,0.75) (dx1) {$\Delta x$};
\draw [-{latex}|] (dx1) -- (1,0.75);
\draw [-{latex}|] (dx1) -- (2,0.75);
\node [] at (0.70,1.5) (dy1) {$\Delta y$};
\draw [-{latex}|] (dy1) -- (0.70,1);
\draw [-{latex}|] (dy1) -- (0.70,2);
\end{tikzpicture}
\end{wrapfigure}

*** Conditions frontière sur les courants (No normal flow)
Aux murs, nous appliquons la condition /no normal flow/ (ou la condition d'imperméabilité).
Cette condition de type Dirichlet est caractérisée par un courant normal nul aux frontières.
Mathématiquement, la condition se traduit par
\begin{equation}
\uu \cdot \nvf =0,
\end{equation}
où $\nvf$ est le vecteur normal à la frontière.
Numériquement, on peut énoncer que sur une grille cartésienne la condition /no normal flow/ symbolise
\begin{subequations}
\begin{align}
  &&(\text{Front. verticales}) && u\pt[1\pt,:]\ =\ u\pt[nx,:\pt] = 0,&& \\
  &&(\text{Front. horizontales}) && v\pt[:\pt,1]\ =\ v\pt[:\pt,ny] = 0.&&  
\end{align}
\end{subequations}

Avec nos points fantômes, on peut étendre les extrémités des frontières et affirmer que ces derniers sont aussi reliés par les relations
\begin{subequations}
\begin{align}
(\text{Courant }u) &&  u\pt[0,\pt:\pt] = u\pt[1,\pt:\pt] && \text{et} && u\pt[nx+1,\pt:\pt] &= u\pt[\pt:\pt,ny],&&\\
(\text{Courant }v) &&  v\pt[\pt:\pt,0] = v\pt[\pt:\pt,1] && \text{et} && v\pt[\pt:\pt,ny+1] &= v\pt[nx,\pt:\pt].&&
\end{align}
\end{subequations}

*** Conditions frontières sur la dérivée première (Free slip condition)

La seconde condition est la /free slip condition/ (ou la condition de glissement libre).
La /free slip condition/ tient à l'hypothèse que la couche limite est si petite qu'on peut essentiellement l'ignorer, ce qui est souvent le cas pour l'étude des fluides à grande échelle.
Concrétement, il n'y a [[https://physics.stackexchange.com/questions/383096/understanding-free-slip-boundary-condition#:~:text=On%20the%20other%20hand%2C%20the,the%20tangential%20component%20is%20unrestricted.][pas de contrainte de cisaillement au mur]], de sorte que
#+NAME: eq:shear-stress
\begin{align}
&&\eval{\qty(\boldsymbol{\tau}_x = \mu \pdv{u}{y})\pt }_{\pt\{xi,xf\}} = 0\pt, && \text{et} &&
  \eval{\qty(\boldsymbol{\tau}_y = \mu \pdv{v}{x})\pt }_{\pt\{yi,yf\}} = 0\pt. &&
\end{align}
où $\mu$ est la viscosité [cite:@tan2018applying].
Ainsi, l'expression [[eq:shear-stress]] force la condition frontière sur la dérivée première à satisfaire 
\begin{equation}
\boxed{\hspace{0.7cm}\eval{\pdv{v}{x}\pt }_{\pt\{xa,xf\}} = 0\pt\ \forall\ y,\hspace{1.3cm} \text{et} \hspace{1.3cm} \eval{\pdv{u}{y}\pt }_{\pt \{yi,yf\}} = 0\pt\ \forall\ x.\hspace{0.7cm}\venti}
\end{equation}
Ce qui se traduit concrétement par
\begin{subequations}
\begin{align}
(\text{Courant }u) &&  u\pt[\pt:\pt,0] = u\pt[\pt:\pt,1] && \text{et} && u\pt[\pt:\pt,ny+1] &= u\pt[\pt:\pt,ny],&&\\
(\text{Courant }v) &&  v\pt[0,\pt:\pt] = v\pt[1,\pt:\pt] && \text{et} && v\pt[nx+1,\pt:\pt] &= v\pt[nx,\pt:\pt].&&
\end{align}
\end{subequations}

*** Condition sur les laplaciens et la fonction de courant
Au murs, on retrouve les quantités $\gradient^2{\uu}$, $\gradient^2{\vv}$, \zeta et $\psi$.
Pour se simplifier la tâche et faire comme dans l'article de [cite:@duhaut2006], on applique
\begin{equation}
   \eval{\gradient^2\pt\uu = \gradient^2\pt\vv = \psi = \zeta =  0\ }_\text{au mur}.
\end{equation}


* Description du couplage avec les vagues

** La dérive de Stokes (Conceptuellement)

Dans leur résumé, [cite/t/c:@suzuki2016understanding]  définissent la dérive de Stokes $\uu_S$ comme une contribution lagrangienne à notre écoulement, de sorte qu'on peut décrire ce courant lagrangien $\uu_L$ par
\begin{equation}
   \uu_L = \uu + \uu_S.
\end{equation}
En somme, 
+ Ce courant lagrangien $\uu_L$ se substitue dans les termes d'advection, de la même manière qu'un référentiel en mouvement ;
+ Les termes de Stokes-Coriolis, Craik-Leibovic et la nouvelle fonction de Bernouilli découlent donc directement de l'ajout de ce référentiel en mouvement.

*** Les équations du mouvement
Lorsqu'on ajoute cette contribution lagrangienne aux équations du mouvement pour un système Boussinesq et en retrouvant les équations /shallow water/ à l'aide des approximations nécessaire, le système d'équations [[eq:mvmt]] devient plutôt
#+name: eq:mvmtvagues
\begin{equation}
   \pdv{\uu}{t} = \qty(f+\zeta)\pt \kvf\ \times\underbrace{\grande\qty(\uu + \uu_S)}_{\substack{\text{Courant} \\ \text{Lagrangien}}} = \underbrace{\grande-\gradient{B_S}}_\text{B.-Stokes} + \ \boldsymbol{D} \underbrace{+ \frac{\boldsymbol{\tau}_o}{\rho_1 H_1}.}_{\substack{\text{Contr. des} \\ \text{Vagues}}},
\end{equation}
*pour la première couche*.
L'introduction de $\boldsymbol{\tau}_o$ dans l'équation [[eq:mvmtvagues]] est confirmée par [cite/t/c:@breivik_al_2015], mais nous y reviendrons à la section [[sec:tau]].
La nouvelle fonction de Bernouilli prenant en compte de la dérive de Stokes est maintenant donnée par
\begin{align}
   B_S = B + \uu\cdot\qty(\vb{U}_S/H_k) + \qty(\vb{U}_S^2/H_S^2)/2 + \phi_s,
\end{align}
où $\vb{U}_S$ est le transport de Stokes fournit par le modèle de vagues.\bigskip

Si l'on développe les termes de l'équation [[eq:mvmtvagues]], on obtient 
#+name: eq:mvmtdev
\begin{equation}
   \pdv{\uu_1}{t}
   \pt + \pt \qty(f+\zeta_1)\pt \kvf\pt \times \uu_1
   \pt + \pt \underbrace{\grande\zeta_1\pt \kvf\pt \times \uu_S}_{\substack{\text{Craik-}\\ \text{Leibovich}}}
   \pt + \pt \underbrace{\grande f\pt \kvf\pt \times \uu_S  }_{\substack{\text{Stokes-}\\ \text{Coriolis}}}
   \pt = \pt -\gradient{B_S}
   \pt + \pt \ \boldsymbol{D}
   \pt + \pt \frac{\boldsymbol{\tau}_o}{\rho_1 H_1},
\end{equation}
ce qui laisse apparaître deux termes importants, soient Stokes-Coriolis et Craik-Leibovich.
D'autres termes associés à la dérive de Stokes pourraient être implémentés (voir [cite/t/c:@wu_breivik_2019] par exemple) si l'on considère aussi la vorticité associée à la dérive de Stokes dans l'équation [[eq:mvmtdev]], mais ça ne fera pas partie de notre étude.

*** Conservation de la masse

L'article de [cite/t/c:@wu_breivik_2019] est assez explicite sur l'addition du transport de Stokes dans l'équation de conservation de la masse.
Sans faire la démarche, on peut obtenir l'équation de conservation de la masse en intégrant la composante verticale des équations du mouvement Boussinesq et en appliquant l'approximation hydrostatique, de sorte que
\begin{equation}
   \pdv{h_k}{t} =  \divergence(h_k\uu_k)\ +\ \underbrace{\delta\pt(k,1)\cdot \qty(\divergence{\vb{U}_S}).}_{\substack{\text{Transport}\\ \text{de Stokes}}}
\end{equation}

** Contrainte de cisaillement du vent à la surface
<<sec:tau>>

Comme illustré dans l'article de [cite/t/c:@breivik_al_2015], la contrainte de cisaillement du vent à la surface est modifié de 3 manières :
+ La rugosité de la surface est prise en compte à l'aide concept /friction velocity/, ($\tau_{fv} = \rho_a |\uu_*| \uu_*$),
+ Le champ de vague vient prendre du momentum au vent ($\tau_{IN}$),
+ Le champ de vagues libère une partie de son énergie à la circulation sous-jacente ($\tau_{DS}$).

On passe donc d'un stress atmosphérique fixe à un stress dépendant du champ de vagues, de sorte que l'on passe de 
\begin{align}
   && \boldsymbol{\tau}_a = \rho_a\pt c_D \abs{\uu_{10}}\uu_{10} && \Longrightarrow && \boldsymbol{\tau}_{oc} = \boldsymbol{\tau}_{fv} - (\boldsymbol{\tau}_{IN} - \boldsymbol{\tau}_{DS}). &&
\end{align}

À l'aide d'une /switch/ de couplage $\delta_{COU}$, la contrainte de cisaillement à la surface est donc exprimée par
\begin{equation}
   \boldsymbol{\tau}\ =\ \underbrace{\tall\delta_{COU}\cdot\boldsymbol{\tau}_{oc}}_\text{Couplé}\ + \ \underbrace{(1-\delta_{COU}) \cdot \boldsymbol{\tau}_a\tall}_\text{Non-couplé}.
\end{equation}
\nb De plus amples informations sur le stress et le vent se retrouvent aux sections [[sec:vent]] et [[sec:inputww3]].
  
** Champs échangés par les deux modèles

Le modèle /shallow water/ envoie une seule quantité au modèle de vagues, soit
+ Le *courant de la première couche* $(u_1,v_1)$.\bigskip

Le modèle Wavewatch III envoie 4 quantités au modèle /shallow water/, soit
+ Le *transport de Stokes* $\vb{U}_S$;
+ La *friction velocity* (vitesse de friction) $\vb{\uu}_*$;
+ Le *momentum absorbé par le champ de vagues* $\boldsymbol{\tau}_{IN}$;
+ Le *momentum dispersé par le champ de vagues* à la circulation sous-jacente $\boldsymbol{\tau}_{IN}$;\bigskip

Wavewatch pourrait aussi nous offrir plusieurs quantités intéressantes pous le couplage, j'en ai compilé une bonne partie dans le tableau [[tab:output]] avec les informations retrouvées dans la documentation de Wavewatch, son code et la littérature adjacente.
Comme il y a eu beaucoup d'incertitude quand à la nature des quantités, mentionnons que tous les $\tau$ fournit par Wavewatch III sont divisé par $\rho_{Atm}$.
C'est mentionné explicitement dans la sous-routine du modèle /w3src3md.ftn/, mais pas dans la documentation.

#+NAME: tab:output
#+CAPTION: Tableau d'investigation récapitulatif des outputs de Wavewatch III.
#+attr_latex: :align lll|lc|c
|-----------------+------------+----------------------------------------------+----------+-------------+--------------------------|
|-----------------+------------+----------------------------------------------+----------+-------------+--------------------------|
| *Documentation* |            |                                              | *Code*   |             | *Litérature*             |
| Nom de code     | output tag | Description (ww3 shel.inp)                   | Variable | Unitées     | Symbole                  |
|-----------------+------------+----------------------------------------------+----------+-------------+--------------------------|
| UST             | UST        | /Friction velocity/                          | UST      | ms^{-1}     | $\ust$                   |
| CHARN           | CHA        | /Charnok parameter/                          | CHARN    | --          | \alpha                   |
| CGE             | CGE        | /Energy flux/                                | CGE      | Wm^{-2}     | $C_gE$                   |
| PHIAW           | FAW        | /Air-sea energy flux/                        | PHIAW    | Wm^{-2}     | ?                        |
| TAUWI[X,Y]      | TAW        | /Net wave-supported stress/                  | TAUWIX/Y | m^{2}s^{-2} | $\tau_w$  ou $\tau_{IN}$ |
| TAUWN[X,Y]      | TWA        | /Negative part of the wave-supported stress/ | TAUWNX/Y | m^{2}s^{-2} | $\tau_w<0$               |
|-----------------+------------+----------------------------------------------+----------+-------------+--------------------------|
| TAUO[X,Y]       | TWO        | /Wave to ocean momentum flux/                | TAUOX/Y  | m^{2}s^{-2} | $\tau_{DS}$              |
| PHIOC           | FOC        | /Wave to ocean energy flux/                  | PHIOC    | Wm^{-2}     | ?                        |
| TUS[X,Y]        | TUS        | /Stokes transport/                           | TUSX/Y   | m^{2}s^{-1} | $\vb{U}_S$               |
| USS[X,Y]        | USS        | /Surface Stokes drift/                       | USSX/Y   | m s^{-1}    |    $\uu_S$               |
|-----------------+------------+----------------------------------------------+----------+-------------+--------------------------|

\newpage

** Interpolation géométrique
#+NAME: fig:interp
#+caption: En a), mise en relation de la grille du modèle «shallow water» (haute résolution, indicateurs bleus) par rapport à la grille de Wavewatch III (basse résolution, indicateurs noirs). En b) et c) « Stencil » utilisé pour réaliser l'interpolation géométrique à ratio $R$ impair.
\begin{wrapfigure}[41]{r}{0.45\textwidth}
\vspace{-5\baselineskip}
\begin{center}
\begin{tikzpicture}[scale = 0.9]
\draw (-0.5,6.3) node {a)};
\draw (6.5,0) node {};
% Big grid
\fill [blue!5] (0,0) rectangle (3,3);
\fill [blue!5] (3,3) rectangle (6,6);
% Grid
\draw (0,0) rectangle (6,6) ;
\draw [dotted] (0,0) grid (6,6) ;
\draw [step=3.0] (0,0) grid (6,6) ;
% Coordinates 
\foreach \x in {1,2,3}
\foreach \y in {1,2,3}
{\draw (\x-0.5,\y-0.5) node [] {1,1};}
%
\foreach \x in {4,5,6}
\foreach \y in {1,2,3}
{\draw (\x-0.5,\y-0.5) node [] {2,1};}
%
\foreach \x in {1,2,3}
\foreach \y in {4,5,6}
{\draw (\x-0.5,\y-0.5) node [] {1,2};}
%
\foreach \x in {4,5,6}
\foreach \y in {4,5,6}
{\draw (\x-0.5,\y-0.5) node [] {2,2};}
% Axis:
\foreach \y in {1,2,3,4,5,6} {\draw (-0.5,\y-0.5) node [cyan] {\y};}
\foreach \x in {1,2,3,4,5,6} {\draw (\x-0.5,-0.5) node [cyan] {\x};}
%
\end{tikzpicture}
%
\begin{tikzpicture}[scale = 0.9]
\draw (-0.5,6.3) node {b)};
\draw (6.5,0) node {};
% Big grid
\fill [blue!5] (0,0) rectangle (3,3);
\fill [blue!5] (3,3) rectangle (6,6);
% Grid
\draw (0,0) rectangle (6,6) ;
\draw [dotted] (0,0) grid (6,6) ;
\draw [step=3.0] (0,0) grid (6,6) ;
% Carré
\fill [cyan, opacity=0.1] (2,2) rectangle (5,5) ;
\draw [cyan, thick] (2,2) rectangle (5,5) ;
\fill [cyan!50, opacity=0.5] (3,3) rectangle (4,4);
% Coordinates 
\foreach \x in {1,2,3}
\foreach \y in {1,2,3}
{\draw (\x-0.5,\y-0.5) node [] {1,1};}
%
\foreach \x in {4,5,6}
\foreach \y in {1,2,3}
{\draw (\x-0.5,\y-0.5) node [] {2,1};}
%
\foreach \x in {1,2,3}
\foreach \y in {4,5,6}
{\draw (\x-0.5,\y-0.5) node [] {1,2};}
%
\foreach \x in {4,5,6}
\foreach \y in {4,5,6}
{\draw (\x-0.5,\y-0.5) node [] {2,2};}
% Axis:
\foreach \y in {1,2,3,4,5,6} {\draw (-0.5,\y-0.5) node [cyan] {\y};}
\foreach \x in {1,2,3,4,5,6} {\draw (\x-0.5,-0.5) node [cyan] {\x};}
%
\end{tikzpicture}
%
\begin{tikzpicture}[scale = 0.9]
\draw (-0.5,6.3) node {c)};
\draw (6.5,0) node {};
% Big grid
\fill [blue!5] (0,0) rectangle (3,3);
\fill [blue!5] (3,3) rectangle (6,6);
% Grid
\draw (0,0) rectangle (6,6) ;
\draw [dotted] (0,0) grid (6,6) ;
\draw [step=3.0] (0,0) grid (6,6) ;
% Carré
\fill [cyan, opacity=0.1] (0,1) rectangle (2,4) ;
\draw [cyan, thick] (0,1) rectangle (2,4) ;
\fill [cyan!50, opacity=0.5] (0,2) rectangle (1,3);
% Coordinates 
\foreach \x in {1,2,3}
\foreach \y in {1,2,3}
{\draw (\x-0.5,\y-0.5) node [] {1,1};}
%
\foreach \x in {4,5,6}
\foreach \y in {1,2,3}
{\draw (\x-0.5,\y-0.5) node [] {2,1};}
%
\foreach \x in {1,2,3}
\foreach \y in {4,5,6}
{\draw (\x-0.5,\y-0.5) node [] {1,2};}
%
\foreach \x in {4,5,6}
\foreach \y in {4,5,6}
{\draw (\x-0.5,\y-0.5) node [] {2,2};}
pn% Axis:
\foreach \y in {1,2,3,4,5,6} {\draw (-0.5,\y-0.5) node [cyan] {\y};}
\foreach \x in {1,2,3,4,5,6} {\draw (\x-0.5,-0.5) node [cyan] {\x};}
%
\end{tikzpicture}
%
\end{center}
\end{wrapfigure}

*** Du modèle « shallow water » au modèle Wavewatch

Le modèle Wavewatch III roule sur une grille *trois fois plus petite* que celle du modèle /shallow water/, entre autres pour sauver du temps de computation.
Donc, lorsqu'on envoie le champ de courant $(u_1,v_1)$ à Wavewatch III, on fait avant tout une moyenne de $R^2$ points où $R$ est le ratio des deux grilles (3 dans notre cas).
$R^2$ représente aussi la taille du /stencil/.\bigskip

Mathématiquement, ça se traduit par
#+NAME: eq:moyenne
\begin{equation}
   (u^{\pt i,j},\pt v^{\pt i,j}) =
   \sum_{\substack{k=1 + (i-1)\times R\\ l=1 + (j-1)\times R}}^{i\times R,\pt j\times R}
   (u_{\pt k,\pt l},\pt v_{\pt k,\pt l}),
\end{equation}
mais ça revient juste à faire la moyenne dans un carré de R^2 = 3\times 3, comme on passe de la grosse grille à la petite grille (comme on peut le voir à la figure [[fig:interp]]a). \bigskip

\nb L'indice en exposant réfère à la grille de résolution plus faible (donc celle qui sera envoyée à Wavewatch III) et l'indice au pied réfère à la grille à haute résolution, soit celle du modèle /shallow water/.

*** De Wavewatch au modèle « shallow water »

À l'inverse, lorsqu'on reçoit les champs de Wavewatch III,  on utilise un /stencil/ de taille $R^2$ qui fait la moyenne géométrique des points adjacents (comme illustré à la figure [[fig:interp]]b).
Par exemple, pour le modèle /shallow water/, la quantité au point (4,4) $Q^{\pt4,4}$ est calculée à l'aide d'une moyenne pondérée des points de Wavewatch, soit
\begin{equation}
   {\color{MidnightBlue} Q_{\pt4,4}} = \qty[\ 1\times Q^{\pt1,1}+ 2\times Q^{\pt1,2}+ 2\times Q^{\pt2,1}+ 4\times Q^{\pt2,2}\ ]\pt/\pt9
\end{equation}

où le tout est divisé par $R^2 = 9$ (voir figure [[fig:interp]]b).\bigskip

À la frontière, on réduit la taille du /stencil/ de sorte à s'adapter à la forme du mur (voir figure [[fig:interp]]c).
Par exemple, pour le modèle /shallow water/, le point (1,3) est calculé à l'aide de la moyenne pondéré des points de Wavewatch, soit
#+NAME: eq:geom1
\begin{equation}
   {\color{MidnightBlue} Q_{\pt1,3}} = \qty[\ 2\times Q^{\pt1,2} + 4\times Q^{\pt1,1}\ ]\pt/\pt6
\end{equation}
où le tout divisé par 2\times3 = 6, soit la taille du /stencil/ (voir figure [[fig:interp]]c).

*** Interpolation grille C et grille A

Le modèle Wavewatch III est déployé sur une grille A, tandis que le modèle /shallow water/ est construit sur une grille de type Arakawa-C, ce qui vient avec son lot de problème.\bigskip

Une fois l'interpolation géométrique exécutée, il est important de replacer les quantités sur la bonne grille.
C'est pourquoi nous interpolons la valeur des champs.
Par exemple, avant d'être moyenné puis envoyé à Wavewatch, le courant de surface du modèle /shallow water/ $u$ doit être interpolé de sorte à ce que
#+NAME: eq:geom2
\begin{equation}
   u^{\pt A}_{\pt i,j} = \qty[\ u^{\pt C}_{\pt i,j} + u^{\pt C}_{\pt i-1,j}\ ]\pt/\pt2,
\end{equation}
où l'exposant $A$ réfère triviallement à la grille de type A et l'indice $C$ réfère à la grille de type C.\bigskip

On effectue l'étape inverse lorsqu'on reçoit les champs de Wavewatch III.

** Cheminement des étapes de couplage et d'interpolation

Avant de réaliser l'échange des champs par canal MPI, l'ordre des étapes est le suivant :
1. Le modèle /shallow water/ interpole les champs de courant de la première couche $(u_1,v_1)$ sur une grille A :
   \begin{equation}
      (\pt u_1^{\pt C},v_1^{\pt C}\pt) \hspace{0.3cm}\Longmapsto \hspace{0.3cm} (\pt u_1^{\pt A},v_1^{\pt A}\pt),
   \end{equation}
2. Le modèle /shallow water/ fait un moyennage des cases pour atteindre la résolution réduite de Wavewatch III (voir équation [[eq:moyenne]]). 
3. On envoit le courant à faible résolution sur une grille A à Wavewatch III par un canal MPI.
4. On reçoit les quantités de Wavewatch à basse résolution par le canal MPI.
5. On réalise l'interpolation géométrique sur les quantités pour avoir une meilleure résolution (voir équation [[eq:geom1]] et [[eq:geom2]]).
6. On fait une interpolation pour passer d'une grille Arakawa-A vers une grille Arakawa-C, de sorte que
   \begin{equation}\qty{\
      \begin{matrix}
        \qty(\tau_{x,IN}^{\pt A},\tau_{y,IN}^{\pt A}\pt), &
        \qty(\tau_{x,DS}^{\pt A},\tau_{y,DS}^{\pt A}\pt), \\
        \qty(u_*^{\pt A},v_*^{\pt A}),   &
        \qty(U_S^{\pt A},V_S^{\pt A})
      \end{matrix}}
      \hspace{0.3cm}\Longmapsto \hspace{0.3cm}\qty{\
      \begin{matrix}
        \qty(\tau_{x,IN}^{\pt C},\tau_{y,IN}^{\pt C}\pt), &
        \qty(\tau_{x,DS}^{\pt C},\tau_{y,DS}^{\pt C}\pt), \\
        \qty(u_*^{\pt C},v_*^{\pt C}),   &
        \qty(U_S^{\pt C},V_S^{\pt C})
      \end{matrix}}
      \end{equation}
   et le tour est joué...\bigskip

Les deux modèles enchaînent ensuite sur leur /timestepping/ et leur propre /RHS/.

** Rampe au moment du couplage

#+NAME: fig:ramp
#+CAPTION: Illustration conceptuelle de la rampe pour éviter le /spin up/ du modèle de vagues.
\begin{figure}
\begin{center}
\begin{tikzpicture}[scale=1.4]
   % Rectangles :
   \fill [BurntOrange!10] (0,0) rectangle (2,3) ;
   \fill [BurntOrange!18] (2,0) rectangle (4,3) ;
   \fill [BurntOrange!26] (4,0) rectangle (6,3) ;
   %
   \draw (1,2.75) node [] {Spin up};
   \draw (3,2.75) node [] {Rampe};
   \draw (5,2.75) node [] {Couplé};
   %
   \draw [thick, MidnightBlue] (2,3) -- (2,0);
   %
   \draw [->] (0,0) -- (6.25,0);
   \draw [->] (0,0) -- (0,3.25);
   \draw [dotted] (0,2.5) -- (6,2.5);
   \draw [thick, BurntOrange!50!red!90] (0,0.01) -- (2,0.01) -- (4,2.5) -- (6,2.5);
   \draw [thick, red] (0,2.5) -- (2,2.5) -- (4,0.01) -- (6,0.01);
   \draw (0,2.5) node [left] {1};
   \draw (0,0) node [left] {0};
   \draw (0,1.30) node [rotate=90, above] {Rampe};
   \draw (2,0) node [below, MidnightBlue] {Couplage};
   \draw (4,0) node [below] {1 mois};
   \draw (6,0) node [below] {Temps};
   %
   \draw (5.7,0.2) node [red] {$\boldsymbol{\tau_{atm}}$};
   \draw (5.7,2.3) node [BurntOrange!50!red!90] {$\boldsymbol{\tau_{oc}}$};
   \draw (5.6,2.1) node [BurntOrange!50!red!90] {$\vb{U}_{Stokes}$};
\end{tikzpicture}
\end{center}
\end{figure}

Comme le modèle Wavewatch a un /spin up/ assez *brutal*, on se permet de mettre une rampe de couplage étallée sur 1 mois (31 jours).
D'un côté, ça permet de limiter la réponse du modèle /shallow water/ à un changement brusque de régime.
De l'autre, ça donne un peu de temps au modèle de vagues pour se stabiliser.
Après toutes expériences que j'ai réalisées, je peux dire que le modèle de vagues prend un bon 4 jours avant de se stabiliser complétement

* Paramètres physiques des équations

** Stress du vent appliqué à la surface des deux modèles
<<sec:vent>>
Stress du vent appliqué à la surface est donné par
#+name:cisaillementvent
\begin{equation}
   \boldsymbol{\tau}_{atm} = \ivf\pt\qty(\venti\frac{\tau_0}{2})\cdot\underbrace{\qty(\venti1-\cos(\frac{2\pi\cdot y}{L_y}))\venti}_\text{Variation y} \pt\cdot\pt \underbrace{\venti\qty(1+S\cdot\sin(f\cdot t))}_\text{Variation temps},
\end{equation}
où $f$ est une fréquence en [rad s^{-1}] -- soit la fréquence de Coriolis dans notre cas.\bigskip

\nb L'équation précédente est observable dans la sous-routine /model/subs/rhs.f90/.

|   <c>    | <l>            | <l>           | <l>                                     |
| Variable | Valeur         | Unités        | Description                             |
|----------+----------------+---------------+-----------------------------------------|
|  \tau_0  | 0.1            | N\pt m^{-2}   | Valeur maximale du stress atmosphérique |
|    y     | [0, L_x]       | m             | Déplacement latitudinal                 |
|   L_y    | 2\times10^6    | m             | Longueur du domaine                     |
|    f     | 7\times10^{-7} | rad\pt s^{-1} | Fréquence de Coriolis                   |
|    t     | --             | s             | Temps                                   |

** Vent donné en input de Wavewatch III
<<sec:inputww3>>
Comme données entrantes,  Wavewatch ne prend pas le stress atmosphérique $\boldsymbol{\tau}_{atm}$, car il le calcule à l'interne.
Il prend plutôt le vecteur vent à $z=10$ m de la surface de l'eau ($\vb{u}_{10}$).
En premier lieu, pour transformer notre contrainte de cisaillement [[cisaillementvent]], on connait la relation
\begin{equation}
   \tau_a = \rho_a c_D |\uu_{10}| \uu_{10},
\end{equation}
où \rho_a est la densité de l'air et c_D est le coefficient de trainée au dessus de l'océan.
Si l'on assume la valeur de la contrainte de cisaillement (0.1 N m^{-2} dans notre cas), alors on peu facilement trouver le vent à 10m d'altitude $\vb{u}_{10}$.\bigskip

On commence par obtenir la valeur de $c_D$ à l'aide de la relation de Charnok [cite:@charnock1955wind] aussi tirée de [cite/t/c:@gill-atmosphere-ocean p.30],
#+name:cd
\begin{align}
   &&c_D = \qty[\frac{\kappa}{\ln(z/z_{\pt0})}]_{\ z=10\pt m}
   && \text{où} &&
   z_0 = \frac{\gamma_{Ch}\tau_a}{g}. &&
\end{align}
Puis enfin, on retrouve $\vb{u}_{10}$ à l'aide de \rho_a et c_D,
\begin{equation}
   u_{10} = \sqrt{\frac{\tau_a}{\rho_a c_D}}.
\end{equation}

\nb Toutes ces équations se retrouvent dans la fonction python /build winds.py/ qui construit un fichier de type NetCDF déchiffrable par /Wavewatch III/.
|    <c>    | <l>          | <l>       | <l>                                            |
| Variable  | Valeur       | Unités    | Description                                    |
|-----------+--------------+-----------+------------------------------------------------|
|    c_D    | À déterminer | --        | Coefficient de traînée                         |
|  \kappa   | 0.41         | --        | Constante de Von Karman                        |
|     z     | 10           | m         | Hauteur de la mesure du vent (Typiquement 10m) |
|    z_0    | À déterminer | m         | Rugosité de l'interface (/roughness lenght/)     |
| \gamma_Ch | 0.0185       | --        | Valeur minimale du paramètre de Charnock       |
|  \tau_a   | [0, 0.1]     | N m^{-2}  | Stress atmosphérique                           |
|     g     | 9.81         | m s^{-2}  | Accélération gravitationnelle                  |
|  \rho_a   | 1.225        | Kg m^{-3} | Densité atmosphérique                          |

**  Le paramètre de Charnock (désambiguation)
Comme illustré dans le tableau précédent, nous avons utilisé 0.0185 comme valeur du paramètre de Charnock.
Le paramètre de Charnock est une quantité adimensionnelle qui dépend de l'état du champ de vagues et qui est curieusement corrélé à l'age du champ de vagues [cite:@janssen2004interaction p.60].
On le calcule à l'aide de la relation
\begin{equation}
   \alpha_c = \frac{z_0 g}{u_*^2}.
\end{equation}
Comme mentionné dans [cite/t/c:@janssen2004interaction], sa valeur est très ambigüe -- [[https://codes.ecmwf.int/grib/param-db/148][le modèle de vagues de l'ECWAM]] utilise une valeur de 0.0185 mais [[https://glossary.ametsoc.org/wiki/Charnock%27s_relation#:~:text=An%20empirical%20expression%20for%20aerodynamic,due%20to%20increasing%20surface%20stress.][l'American Meteorological Society]] propose plutôt une valeur de 0.015.\bigskip

Donc, si l'on ne connait pas vraiment l'état des vagues, on ne peut pas vraiment estimer le coefficient de trainée de l'équation [[cd]] sans le coefficient de Charnock.
Par contre, le [[https://codes.ecmwf.int/grib/param-db/148][site du modèle ECWAM]] mentionne ceci :

#+begin_quote
/This parameter accounts for increased aerodynamic roughness as wave heights grow due to increasing surface stress. It depends on the wind speed, wave age and other aspects of the sea state and is used to calculate how much the waves slow down the wind./

/When the atmospheric model is run without the ocean model, this parameter has a constant value of 0.018. When the atmospheric model is coupled to the ocean model, this parameter is calculated by the ECMWF Wave Model./
#+end_quote

et l'article de [cite/t/c:@janssen2004interaction p.163] mentionnne

#+begin_quote
/The constant $\hat{\alpha}$ was chosen in such a way
that for old windsea the Charnock parameter [$\alpha_{ch}$] has the value of 0.0185 in
agreement with observations collected by Wu (1982) on the drag over sea
waves./
#+end_quote

Donc, c'est pourquoi j'ai pris la valeur de 0.0185 pour calculer le vent à 10 mètre de la surface, à l'aide des relations de la sous-section [[sec:inputww3]].

** Ce que Wavewatch III voit en input

Comme la /switch/ ST3 est activée, le modèle utilise le module /wavewatch/ftn/w3src3md.ftn/ et donc il calcule la /friction velocity/ à l'aide de la sous-routine /CALC USTAR(WINDSPEED,TAUW,USTAR,Z0,CHARN)/.
Plus précisément,
1. Il calcule la partie du *transfert de momentum vers les vagues* $\tau_w$ (/wave supported stress/) à *l'aide de tables* (voir sous-routine /w3sin3/ dans /wavewatch/ftn/w3src3md.ftn/).
2. Il *se sert de nouveau de tables* pour trouver la *vitesse de friction* $u_*$ (/friction velocity)/ en fonction du transfert de momentum aux vagues $\tau_w$ ou $\tau_{IN}$;
3. Il calcule le *coefficient de trainée* $c_D$ à l'aide de la relation
   \begin{equation}
      c_d = \qty(\venti\frac{u_*}{u_{10}})^2;
   \end{equation}
4. Il calcule la *rugosité* $z_0$ (/roughness lenght/) à l'aide de
   \begin{equation}
      z_0 = 10 \exp \qty(-\kappa \sqrt{c_D});
   \end{equation}
5. Il trouve le *paramètre de Charnok* $/alpha_{ch}$ và l'aide de 
   \begin{equation}
      \alpha_{ch} = \frac{z_0 g}{u_*^2}.
   \end{equation}



** Tableau et résumé des quantités physiques importantes

J'ai réunis dans le tableau suivant tous les paramètres physiques intéressants pour recréer les expériences.

#+attr_latex: :align lllll
|------------------+-------------------------------------+-------------------------------------+---------------------+------------------|
|------------------+-------------------------------------+-------------------------------------+---------------------+------------------|
|                  | Paramètres                          | Symbole                             |              Valeur | Unités           |
|------------------+-------------------------------------+-------------------------------------+---------------------+------------------|
| *Modèles en eau* | Taille du domaine                   | L_x = L_y                           |                2000 | km               |
| *peu profonde*   | Nombre de points                    | n_x = n_y                           |                 513 | --               |
|                  | Pas de temps                        | $\Delta t$                          |                 300 | s                |
|                  | Paramètre de Coriolis               | f                                   |      7\times10^{-5} | rad s^{-1}  |
|                  | Amplitude du vent                   | \tau_{atm}                          |                 0.1 | N m^{-2}         |
|                  | Coef. d'hyperviscosité              | A_h                                 |  dx^4 \times10^{-5} | s^{-1}           |
|                  | Coef. de frottement au fond         | r_{drag}                            |             10^{-7} | s^{-1}           |
|                  | Épaisseur de la couche en surface   | H_1                                 |                 482 | m                |
|                  | Épaisseur de la seconde couche      | H_2                                 |                1042 | m                |
|                  | Épaisseur de la couche au fond      | H_3                                 |                2475 | m                |
|                  | Densité de l'eau (première couche)  | \rho_1                              |             1026.42 | kg m^{-3}        |
|                  | Densité de l'eau (seconde couche)   | \rho_2                              |             1027.27 | kg m^{-3}        |
|                  | Densité de l'eau (troisième couche) | \rho_3                              |             1027.87 | kg m^{-3}        |
|                  | Gravité réduite (seconde couche)    | g_2'                                | 8.01 \times 10^{-3} | ms^{-2}          |
|                  | Gravité réduite (troisième couche)  | g_3'                                | 5.80 \times 10^{-3} | ms^{-2}          |
|------------------+-------------------------------------+-------------------------------------+---------------------+------------------|
|------------------+-------------------------------------+-------------------------------------+---------------------+------------------|
| *Modèles*        | Taille du domaine (incluant terre)  | L_y = L_y                           |        \sim 2023.39 | km               |
| *Wavewatch III*  | Nombre de points de grille          | n_x = n_y                           |                 173 | --               |
|                  | Taille du domaine couplé            | L_y^* = L_x^*                       |                2000 | km               |
|                  | Nombre de points de grilles couplés | n_x^* = n_y^*                       |                 171 | --               |
|                  | Pas de temps global maximum         | $\Delta t_g$                        |                 300 | s                |
|                  | Pas de temps max. (Cond. CFL x,y)   | $\Delta t_{\pt CFL}^{\pt x,y}$      |                 150 | s                |
|                  | Pas de temps max. (Cond. CFL x,y)   | $\Delta t_{\pt CFL}^{\pt k,\theta}$ |                 150 | s                |
|                  | Pas de temps min. des termes source | $\Delta t_{Src}$                    |                  50 | s                |
|                  | Coef. de réflection au mur          | R_0                                 |                 0.1 | --               |
|                  | Densité de l'air                    | \rho_a                              |               1.225 | Kg m^{-3}        |
|------------------+-------------------------------------+-------------------------------------+---------------------+------------------|
| *Vent*           | Stress maximum du vent              | \tau_0                              |                 0.1 | N m^{-1}         |
|                  | Écart de variation (/Step/)         | S                                   |                0.05 | --               |
|                  | Accélération gravitationnelle       | g                                   |                9.81 | m s^{-2}         |
|                  | Constante de Von Karmann            | \kappa                              |                 0.41 | --               |
|                  | Coefficient de Charnok              | \gamma_{Ch}                         |              0.0185 | --               |
|                  | Densité de l'air                    | \rho_a                              |               1.225 | kg m^{-3}        |
|------------------+-------------------------------------+-------------------------------------+---------------------+------------------|




** Switches du modèles Wavewatch III

Le modèle Wavewatch III est modulable à l'aide de /switches/, voici celles qui ont été utilisées dans le cadre de cette recherche. 

#+attr_latex: :align cl
|-------+------------------------------------------------------------------------------------|
|-------+------------------------------------------------------------------------------------|
| Nom   | Description                                                                        |
|-------+------------------------------------------------------------------------------------|
| F90   | FORTRAN-90 style date and time capturing and program abort.                        |
| NOGRB | No GRIB package included.                                                          |
| NOPA  | Compilation as a stand-alone program.                                              |
| LRB4  | 4 bytes words in direct acces files.                                               |
| NC4   | Use NetCDF4.                                                                       |
| DIST  | Distributed memory model.                                                          |
| MPI   | Use MPI.                                                                           |
| PR3   | Propagation scheme : Higher-order schemes with Tolman (2002a) averaging technique. |
| UQ    | Third-order (UQ) propagation scheme.                                               |
| FLX0  | Flux computation : No routine used; flux computation included in source terms.     |
| LN1   | Linear input : Cavaleri and Malanotte-Rizzoli with filter.                         |
| ST3   | Input and dissipation : WAM4 and variants source term package.                     |
| NL1   | Non-linear interactions : Discrete interaction approximation (DIA).                |
| BT0   | Bottom friction : No bottom friction used.                                         |
| DB0   | No depth-induced breaking used.                                                    |
| TR0   | No triad interactions used.                                                        |
| BS0   | No bottom scattering used.                                                         |
| IS0   | No-damping by sea-ice.                                                             |
| REF1  | Enables reflection of shorelines and icebergs.                                     |
| XX0   | No supplemental source term used.                                                  |
| WNT1  | Wind input interpolation (time) : Linear interpolation.                            |
| WNX0  | Wind input interpolation (space) : No interpolation.                               |
| CRT0  | Current input interpolation (time) : No interpolation.                             |
| CRX0  | Current input interpolation (time) : No interpolation.                             |
| TRKNC | Activates the NetCDF API in the wave system tracking post-processing program.      |
| O0    | Output of namelists in grid preprocessor.                                          |
| 01    | Output of boundary points in grid preprocessor.                                    |
| 02    | Output of the grid point status map in grid preprocessor.                          |
|-------+------------------------------------------------------------------------------------|

* Faire fonctionner les modèles couplées

Voici les étapes à suivre pour faire rouler les deux modèles sur Oxygen.

** Compilation du modèle /shallow water/

Avant tout, il faut aller dans le répertoire du modèle /shallow water/.
Dans le cas qui nous intéresse, le modèle sur Oxygen se trouve au répertoire
#+begin_src bash
   >>> cd aos/home/celizotte/Desktop/Modele-shallow-water-multicouche/
#+end_src
\nb À chaque fois qu'on modifie le modèle /shallow water/, il faut le recompiler.

*** Modifier le fichier « parameters.f90 »

Toutes les /switches/ et les paramètres à modifier se retrouvent dans le fichier /parameters.f90/.
Si l'on veut que le modèle soit couplé avec Wavewatch, il faut absolument utiliser la /switch/ COU = .true.\bigskip

Un exemple de fichier de paramètres pour les modèles couplés est fournit sous le nom de /parameters COU.f90/.
Tandis qu'un version non-couplée est fournit sous le nom de /parameters tmp.f90/. 

*** Compilation du modèle avec l'exécutable « compile model »

Une fois les paramètres modifiés à souhait, il faut compiler le modèle /shallow water/ à l'aide de l'exécutable /compile model/.
Lorsque ce dernier sera exécuté, il suffit de rentrer la valeur « 1 », pour signifier la compilation avec Oxygen.
#+begin_src bash
   >>> ./compile_model
   !! Enter machine: 1) Oxygen (McGill computer); computer 2) Bepsi (personal computer); 3) Beluga
   (Compute Canada)
   >>> 1
   !! Using setting for Oxygen with fishpack stored at ${fishpack_path} and lapack at ${lapack_path}
   !! Parameters file copied from ${model_path} to ${case}
   !! Compilation of $case/exec completed on the computer Oxygen.
#+end_src
Une fois compilé, l'exécutable du modèle « /exec/ » se déplace automatiquement dans le dossier /newcase/, ainsi qu'un copie des paramètres utilisées pour la compilation. 

** Compilation du modèle Wavewatch III

La compilation du modèle /Wavewatch III/ n'est nécessaire qu'une seule fois -- à moins que vous modifiez le fichier de /switches/, ce qui arrive rarement. 

*** Compilation du modèle avec l'exécutable « make oxygen »

** Création des inputs et assimilation par Wavewatch III

*** Création d'un nouveau cas 

** Rouler les modèles en MPI 

\newpage
#+print_bibliography:
