#+title: Carnet de bord, Université McGill
#+subtitle: Contrat Été 2023
#+author: Charles-Édouard Lizotte
#+date:06/10/2023
#+LATEX_CLASS: org-report
#+LANGUAGE: fr
#+BIBLIOGRAPHY: master-bibliography.bib
#+OPTIONS: toc:nil title:nil


\mytitlepage
\tableofcontents\newpage

* DONE Le problème des ondes de Kelvin au bord -- <2023-10-03 mar.>
DEADLINE: <2023-10-03 mar.>

Depuis quelques temps, toutes les simulations numériques non-couplées plantaient.
Lorsque nous analysions les /output/, il était évident que quelque chose se passait aux bords.
L'épaisseur de la couche de surface atteingnait son minimum au côtes nord et sud, come si une onde de Kelvin beaucoup trop forte s'y était développée.

** Partial slip condition
David eu la brillante idée de vouloir « ralentir » l'onde -- et donc diminuer son amplitude -- en changeant sa vitesse aux frontières.
Pour se faire, nous avions choisi de modifier la /free slip condition/ pour quelque chose qui retirerait du momentum aux frontières, donc une /partial slip condition/.
Aux frontières, la dérivée serait plutôt exprimée selon
\begin{equation}
   \eval{\qty(\pdv{v}{x} + \alpha v)\pt}_{x=0} = 0,
\end{equation}
ce qui se traduit en différence finie par
\begin{equation}
   \qty(\frac{v(1) - v(0)}{\Delta x}) + \alpha\pt\qty( \frac{v(1)+v(0)}{2}) = 0.
\end{equation}

Et puis le paramètre $\alpha$ devrait représenter l'inverse d'une longueur charactéristique $L_c$, de sorte que
\begin{align}
   && \alpha = \frac{1}{L_c}, && \text{tel que} && L_c \sim 5\ \text{km}. && 
\end{align}
Mais malgré tout, ça n'a pas sembler fonctionner.
En effet, avec le temps, le courant et sa dérivée se stabilisent et l'effet devient quasiment similaire à un /free slip/ selon David.
De plus, notre longueur caractéristique $L_c$ ne peut pas être si grande que ça, ce qui fait en sorte que quelques points plus loin que la frontière et on est revenu à une condition quasi /free slip/.
Donc, malgré que la /switch/ est présente dans le fichier de paramètres, nous avons abandonné ce chemin.

** Changer l'hyperviscosité par une viscosité -- <2023-10-04 mer.>
David soupçonnait qu'il y avait un problème relié à l'hyperviscosité dans le modèle.
Il aurait été possible que la manière qu'on avait implémenté l'hyperviscosité ne fonctionne pas bien avec les bords -- étant donné que ça met en jeu un Laplacien double, etc. 
C'est pourquoi David m'a proposé de la changer pour une viscosité qui dépend du Laplacien directement.
On aurait même pu mettre les deux, au final.
La viscosité peut en fait être exprimée mathématiquement par
\begin{equation}
   \text{Viscosité} = Ah_2 \laplacian{u}  - Ah_4 \gradient^4 u.
\end{equation}
Bien que nous ayons implémenté une viscosité au lieu d'une hyperviscosité, le résultat était toujours le même.
Les couches du modèle atteingnaient des épaisseurs nulles après quelques pas de temps aux frontières nord et sud.

** Changer le profil de vent -- <2023-10-04 mer.>
Après avoir fait pas mal de recherche sur les ondes de Kelvin dans le [cite:@vallis_2006], David est arrivé à la conclusion que ce n'étaient pas des ondes de Kelvin, mais plutôt de l'/upwelling/ induit par le courant de bord.
Ce courant était trop fort à cause du vent, donc on est passé d'un vent
\begin{equation}
   \tau = -\tau_0 \cdot \cos(\frac{2\pi y}{L_y}),
\end{equation}
à 
\begin{equation}
   \tau = \tau_0\cdot\qty(1-\cos(\frac{2\pi y}{L_y})).
\end{equation}
On a aussi diminué la valeur de $\tau_0$ de moitié et tout fonctionne mieux.
Le modèle produit maintenant des instabilités barocliniques sans problème.

* DONE Compute Canada -- <2023-10-05 jeu.>
DEADLINE: <2023-10-06 ven.>

** Introduction
Pour se connecter,
#+begin_src bash
  ssh -Y celiz2@beluga.computecanada.ca
#+end_src
Le mot de passe est laissé à la discrétion du lecteur de ce rapport.
En résumé, nous travaillons sur la grappe de calcul de l'ETS, soit Beluga en l'honneur de la baleine qui est en train de crever dans le Saint-Laurent.

** Importation des modules sur Compute Canada
Pour faire fonctionner nos modèles, on a besoin d'une couple de modules.
Au même titre que sur la grappe de calcul Mingan, il est toujours possible de voir les modules listés à l'aide de la commande
#+begin_src bash
  module list
#+end_src
Et normalement, il est possible de voir les modules disponibles à l'aide de la commande
#+begin_src bash
  module avail
#+end_src
Par contre, il y a tellement de modules qu'on est fortement encouragé d'utiliser le modteur de recherche /spider/ pour voir si un module existe.
Par exemple,
#+begin_src bash
  module spider <module name>
#+end_src

Pour le modèle /shallow water/, on a besoin de deux modules, soient
#+begin_src bash
  # Shallow watewr model stull
  module load openblas
  module load flexiblas
#+end_src
qui nous permettent d'avoir /BLAS/ et /LAPACK/.
Pour ce qui est de /fishpack/, tout s'est installé sans problème et les librairies sont dans le répertoire local.
Tandis que pour Wavewatch III, il faut absolument ajouter ces commandes à notre /.bashrc/, soient 
#+begin_src bash
  # Wavewatch III stuff                                                                       
  module load netcdf-fortran
  export WWATCH3_NETCDF=NC4
  export NETCDF_CONFIG=/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx512/Compiler/intel2020/netcdf/4.9.0/bin/\
  nc-config
  PATH=$PATH:$HOME/projects/def-lpnadeau/celiz2/wavewatch3/bin
  PATH=$PATH:$HOME/projects/def-lpnadeau/celiz2/wavewatch3/exe
  export PATH
#+end_src


** Script bash de type SLURM -- <2023-10-10 mar.>

Pour faire fonctionner les module MPI sur compute Canada, il faut utiliser /srun/, mais la commande /mpirun/ fonctionne aussi.\bigskip

** Compilation des modèles numériques en MPI -- <2023-10-10 mar.>
Un résumé rapide du travail effectué pour que ça /marche/ entre vendredi et mardi : \bigskip
1. Le modèle /shallow water/ doit *absolument* être compilé avec /gfortran/, /fishpack/ n'a malheureusement pas été programé pour fonctionner avec /ifort/;\bigskip
2. Il semble que les deux modèles doivent *impérativement* être compilés avec le même compilateur pour que MPI fonctionne.
   Je n'avais initialement pas ce problème sur mon ordinateur personnel, mais il semble que ça soit nécessaire sur Béluga.
   On pourrait peut-être trouver un moyen définissant des variables globales de MPI, mais je préfère ne pas m'embarquer là-dedans. Ça serait une perte de temps monumentale.\bigskip
3. La sous-routine /ww3 prnc/ du modèle Wavewatch (soit la routine qui transforme les fichiers NetCDF en input pour Wavewatch) ne peut pas être compilée avec /gfortran/. Pour vrai, j'ai tout essayer.
   C'est comme si -- malgré l'importation des modules nécessaires (netcdf, netcdf-fortran, netcdf-mpi-fortran, etc) -- la fonction *USE MPI* dans la sous-routine /ww3 prnc/ est incapable de compiler.\bigskip

   Comme solution, je compile donc toutes les sous-routines qui ne sont pas le /shel/ avec /ifort/ et je compile le /shel/ en MPI avec /gfortran/.
   C'est malheureusement le seul moyen que j'ai trouvé.\bigskip

Dans le meilleur des mondes, j'aurais aimé que tout se compile soit avec /gfortran/ ou avec /ifort/, mais il semble que ça doit en être autrement.
Je voulais mettre ça ici, parce que ça m'a pris beaucoup de temps pour /fuck around and find out/ tout ça.


* DONE Nouveau schéma pour l'introduction de la dérive de Stokes dans les équations du mouvement -- <2023-10-06 ven.>
DEADLINE: <2023-10-08 dim.>

Initialement, les équations du mouvement d'un système Boussinesq sont exprimées selon l'expression
#+NAME:eq:mvmnt
\begin{equation}
   \pdv{\uu}{t} = \qty(f+\zeta)\pt \kvf\times\uu = -\gradient{B} + \boldsymbol{D} + \frac{\boldsymbol{\tau_a}}{\rho_o H},
\end{equation}
où la fonction de Bernouilli ($B$) est exprimée par $B = p/\rho_o + \uu^2/2$.\bigskip

Dans leur résumé, [cite/t/c:@suzuki2016understanding]  définissent la dérive de Stokes $\uu_S$ comme une contribution lagrangienne à notre écoulement, de sorte qu'on peut décrire ce courant lagrangien $\uu_L$ par
\begin{equation}
   \uu_L = \uu + \uu_S.
\end{equation}
En somme, 
+ Ce courant lagrangien $\uu_L$ se substitue dans les termes d'advection, de la même manière qu'un référentiel en mouvement ;
+ Les termes de Stokes-Coriolis, Craik-Leibovic et la nouvelle fonction de Bernouilli découlent donc directement cette au référentiel en mouvement. \bigskip

Lorsqu'on ajoute cette contribution lagrangienne à notre courant, l'expression [[eq:mvmnt]] devient plutôt
\begin{equation}
   \pdv{\uu}{t} = \qty(f+\zeta)\pt \kvf\ \times\underbrace{\grande\qty(\uu + \uu_S)}_{\substack{\text{Courant} \\ \text{Lagrangien}}} = \underbrace{\grande-\gradient{B_S}}_\text{B.-Stokes} + \ \boldsymbol{D} \underbrace{+ \frac{\tau_o}{\rho_o H}.}_{\substack{\text{Contr. des} \\ \text{Vagues}}}
\end{equation}
où la nouvelle fonction de Bernouilli qui tient compte de la dérive de Stokes est donnée par
\begin{align}
   B_S = B + \uu\cdot\uu_S + \uu_S^2/2.
\end{align}

#+print_bibliography:
